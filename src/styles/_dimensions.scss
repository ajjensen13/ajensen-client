$s: 1rem; // spacer
$s-names: ("none": 0, "tight": 0.5, "default": 1, "cozy": 1.5);
$directions: ("top": "t", "right": "r", "bottom": "b", "left": "l");
$direction-combinations: ("v": ("top", "bottom"), "h": ("right", "left"));

@function size($name) {
  @return map_get($s-names, $name) * $s;
}

@mixin p-none {
  padding: size("none");
}

@mixin p-tight {
  padding: size("tight");
}

@mixin p-default {
  padding: size("default");
}

@mixin p-cozy {
  padding: size("cozy");
}

@mixin m-none {
  margin: size("none");
}

@mixin m-tight {
  margin: size("tight");
}

@mixin m-default {
  margin: size("default");
}

@mixin m-cozy {
  margin: size("cozy");
}

@mixin s-none {
  @include p-none;
  @include m-none;
}

@mixin s-tight {
  @include p-tight;
  @include m-tight;
}

@mixin s-default {
  @include p-default;
  @include m-default;
}

@mixin s-cozy {
  @include p-cozy;
  @include m-cozy;
}

@each $sname, $_ in $s-names {
  .p-#{$sname} {
    padding: size($sname);
  }
  .m-#{$sname} {
    margin: size($sname);
  }
  .s-#{$sname} {
    padding: size($sname);
    margin: size($sname);
  }
  @each $dname, $letter in $directions {
    .p#{$letter}-#{$sname} {
      padding-#{$dname}: size($sname);
    }
    .m#{$letter}-#{$sname} {
      margin-#{$dname}: size($sname);
    }
    .s#{$letter}-#{$sname} {
      padding-#{$dname}: size($sname);
      margin-#{$dname}: size($sname);
    }
  }
  @each $comb, $dnames in $direction-combinations {
    .p#{$comb}-#{$sname} {
      @each $dname in $dnames {
        padding-#{$dname}: size($sname);
      }
    }
    .m#{$comb}-#{$sname} {
      @each $dname in $dnames {
        margin-#{$dname}: size($sname);
      }
    }
    .s#{$comb}-#{$sname} {
      @each $dname in $dnames {
        padding-#{$dname}: size($sname);
        margin-#{$dname}: size($sname);
      }
    }
  }
}
